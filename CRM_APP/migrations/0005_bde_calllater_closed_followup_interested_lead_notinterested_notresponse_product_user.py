# Generated by Django 3.2.25 on 2025-01-27 06:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('CRM_APP', '0004_auto_20250112_1029'),
    ]

    operations = [
        migrations.CreateModel(
            name='BDE',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(max_length=300, unique=True)),
                ('password', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calllater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_later', models.DateField()),
                ('reason', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='closed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(max_length=200, null=True)),
                ('product', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('offer', models.CharField(max_length=100)),
                ('installation_type', models.CharField(max_length=200)),
                ('installation_date', models.DateField()),
                ('duration_from', models.DateField()),
                ('duration_to', models.DateField()),
                ('payment_type', models.CharField(max_length=100)),
                ('payment', models.IntegerField()),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Followup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_follow_up', models.DateField()),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Interested',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=250)),
                ('priority', models.CharField(max_length=250)),
                ('product_type', models.CharField(max_length=250)),
                ('demo_date', models.DateField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=60)),
                ('specialization', models.CharField(max_length=50)),
                ('assigned', models.CharField(default='assigned', max_length=50)),
                ('mode', models.CharField(max_length=40)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('clinic_name', models.CharField(max_length=100)),
                ('default_language', models.CharField(max_length=100)),
                ('priority', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=200)),
                ('status', models.CharField(default='Open', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Notinterested',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_follow_up', models.DateField()),
                ('reason', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Notresponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_calling', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(max_length=50)),
                ('packages', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
